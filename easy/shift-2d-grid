class Solution {
    public int[][] grid;
    public List<List<Integer>> shiftGrid(int[][] grid, int k) {
        this.grid = grid;
        
        while (k>0){
            this.shift();
            k--;
        }
        List<List<Integer>> list = new ArrayList<>();
        for (int i =0; i<grid.length ; i++ ){
            List<Integer> l = new ArrayList<>();
            for (int j=0; j<grid[0].length; j++){
                l.add(grid[i][j]);
            }
            list.add(l);
        }
        return list;
    }
    
    public void shift(){
        List<Integer> l = new ArrayList<>();
        l.add(this.grid[this.grid.length -1][this.grid[0].length -1]);
        for (int i =0; i < this.grid.length-1; i++){
            l.add(this.grid[i][this.grid[0].length-1]);
        }
        
        for (int j = grid[0].length-1 ; j>=1; j--){
            for (int i =0; i<grid.length; i++){
                
                grid[i][j] = grid[i][j-1];
            }
        }
        
        for (int i =0; i < this.grid.length; i++){
            grid[i][0] = l.get(i);
        }
    }
}
